<?xml version="1.1" encoding="UTF-8"?>
<flow-definition plugin="workflow-job@2.37">
  <actions/>
  <description>Add new packages for internalizing from the Chocolatey Community and Licensed Repositories.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>P_PKG_LIST</name>
          <description>List of Chocolatey packages to be internalized (comma separated).</description>
          <defaultValue/>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>P_DST_URL</name>
          <description>Internal package repository URL.</description>
          <defaultValue>https://{{ nexus_hostname }}:{{ nexus_port }}/repository/ChocolateyTest/</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.PasswordParameterDefinition>
          <name>P_API_KEY</name>
          <description>API key for the internal test repository</description>
          <defaultValue>{{ nuget_api_key }}</defaultValue>
        </hudson.model.PasswordParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.80">
    <script>  node {
      powershell '''
          $temp = Join-Path -Path $env:TEMP -ChildPath ([GUID]::NewGuid()).Guid
          $null = New-Item -Path $temp -ItemType Directory
          Write-Output "Created temporary directory '$temp'."
          ($env:P_PKG_LIST).split(';,') | ForEach-Object {
              choco download $_ --no-progress --internalize --force --internalize-all-urls --append-use-original-location --output-directory=$temp --source='chocolatey.licensed;https://community.chocolatey.org/api/v2/'
              if ($LASTEXITCODE -eq 0) {
				        (Get-Item -Path (Join-Path -Path $temp -ChildPath "*.nupkg")).fullname | ForEach-Object {
      					  choco push $_ --source "$($env:P_DST_URL)" --api-key "$($env:P_API_KEY)" --force
					        if ($LASTEXITCODE -eq 0) {
						        Write-Verbose "Package '$_' pushed to '$($env:P_DST_URL)'.";
					        }
					        else {
						        Write-Verbose "Package '$_' could not be pushed to '$($env:P_DST_URL)'.`nThis could be because it already exists in the repository at a higher version and can be mostly ignored. Check error logs."
					        }
				        }
              }
              else {
                  Write-Output "Failed to download package '$_'"
              }

			      # Clean up, ready for next execution
			      Remove-Item -Path (Join-Path -Path $temp -ChildPath "*.nupkg") -Force
          }
          Remove-Item -Path $temp -Force -Recurse
      '''
  }
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>
